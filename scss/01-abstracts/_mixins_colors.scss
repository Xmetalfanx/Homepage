@use "sass:map";
@use "sass:color";
@use "color-themes" as *;

// location for now means bg or c  for where to put this
// I know there has to be a better way but i can refactor later

@mixin clr-lighten($location, $color, $amount: 10%) {
  @if $location == "bg" {
    background-color: color.adjust($color, $lightness: $amount);
  }

  @if $location == "c" {
    color: color.adjust($color, $lightness: $amount);
  }
}

@mixin clr-darken($location, $color, $amount: 10%) {
  @if $location == "bg" {
    background-color: color.adjust($color, $lightness: -$amount);
  }

  @if $location == "c" {
    color: color.adjust($color, $lightness: -$amount);
  }
}

////////////////////////////////////////////////////////////

@mixin color-theme($bg: $theme-clr-light, $fg: $theme-clr-dark) {
  background-color: $bg;
  color: $fg;
}

@mixin color-theme-dark($bg: $theme-clr-dark, $fg: $theme-clr-light) {
  @media (prefers-color-scheme: dark) {
    background-color: $bg;
    color: $fg;
  }
}

////////////////////////////////////////////////////////////////
// Themings got goofy with git feature branch mishaps and i dont reconginze the code below

// @mixin themify($current-theme) {
//   @each $name, $values in $current-theme {
//     .#{$name}-theme {
//       $theme-map: $values !global;
//       @content;
//     }
//   }
// }

// @function themed($key) {
//   @return map.get($current-theme, $key);
// }
